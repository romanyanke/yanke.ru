{"version":3,"sources":["components/ProfileImage/assets/romanyanke.jpg","components/ProfileImage/assets/romanyanke@2x.jpg","components/ProfileImage/assets/romanyanke@3x.jpg","components/ThemeSwitcher/ThemeSwitcher.interface.ts","components/Details/Details.tsx","components/ThemeSwitcher/ThemeSwitcher.utils.ts","components/ProfileImage/ProfileImage.tsx","components/ThemeSwitcher/ThemeSwitcher.tsx","components/Pencils/Pencils.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","Theme","Details","label","value","ThemeIcon","ProfileImage","className","width","height","alt","src","profilePicture","srcSet","profilePicture2","profilePicture3","ThemeSwitcher","theme","onChange","key","onClick","light","dark","swapTheme","sunIcon","moonIcon","Pencils","useState","info","setInfo","useEffect","a","fetch","response","json","description","fetchData","href","App","setTheme","themed","day","daynight","error","aria-hidden","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","render"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,2KCE/BC,E,qDCUGC,G,MATqB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACE,oCACE,4BAAKD,GACL,4BAAKC,O,SDLCH,O,iBAAAA,I,gBAAAA,M,eEAAI,E,gDCmBGC,EAfM,WACnB,OACE,yBAAKC,UAAU,gBACb,yBACEC,MAAM,MACNC,OAAO,MACPC,IAAI,cACJC,IAAKC,IACLC,OAAM,UAAKC,IAAL,gBAA4BC,IAA5B,SAER,4BAAQR,UAAU,wBAAlB,iB,gBDdMF,K,uBAAAA,E,yBAAAA,M,KAKL,IESQW,EAZO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACpB,4BACEC,IAAKF,EACLG,QAAS,kBAAMF,EFAM,SAACD,GAAD,OAAmBA,IAAUhB,EAAMoB,MAAQpB,EAAMqB,KAAOrB,EAAMoB,MEA3DE,CAAUN,KAClCV,UAAS,qCAAgCU,IAEzC,0BAAMV,UAAU,sBACbU,IAAUhB,EAAMqB,KAAOjB,EAAUmB,QAAUnB,EAAUoB,Y,8BCgB7CC,EAvBC,WAAO,IAAD,EACIC,mBAAwB,MAD5B,mBACbC,EADa,KACPC,EADO,KAWpB,OATAC,oBAAU,YACO,sCAAG,8BAAAC,EAAA,qEACOC,MAAM,8DADb,cACVC,EADU,gBAEgBA,EAASC,OAFzB,OAEVN,EAFU,OAGhBC,EAAQD,EAAKO,aAHG,yCAAH,qDAKfC,IACC,IAEIR,EACL,kBAAC,EAAD,CACEzB,MAAM,QACNC,MACE,wCACS,uBAAGiC,KAAK,2BAA2BT,GAD5C,OAKF,MCuBSU,EAtCQ,WAAO,IAAD,EACDX,mBAAgB1B,EAAMoB,OADrB,mBACpBJ,EADoB,KACbsB,EADa,KAErBC,EAASvC,EAAMgB,GAMrB,OALAa,oBAAU,WACR,IAAMW,EAAMC,cACZH,GAAUE,EAAIE,OAASF,EAAIpB,MAAQpB,EAAMoB,MAAQpB,EAAMqB,OACtD,IAGD,yBAAKf,UAAS,cAASiC,IACrB,0BAAMjC,UAAU,iBACd,6BAASA,UAAU,cACjB,yBAAKqC,cAAY,OAAOrC,UAAU,sBAChC,kBAAC,EAAD,CAAeU,MAAOA,EAAOC,SAAUqB,KAEzC,kBAAC,EAAD,OAGF,4BACE,kBAAC,EAAD,CAASpC,MAAM,WAAWC,MAAM,eAChC,kBAAC,EAAD,CACED,MAAM,QACNC,MACE,wFAEE,uBAAGiC,KAAK,6BAAR,aAFF,OAMJ,kBAAC,EAAD,CAASlC,MAAM,QAAQC,MAAO,uBAAGiC,KAAK,yBAAR,oBAC9B,kBAAC,EAAD,CAASlC,MAAM,WAAWC,MAAM,6BAChC,kBAAC,EAAD,UCnCJyC,EAAcC,SAASC,eAAe,QAExCF,IACEA,EAAYG,gBACdC,IAASC,QAAQ,kBAAC,EAAD,MAASL,GAE1BI,IAASE,OAAO,kBAAC,EAAD,MAASN,M","file":"static/js/main.5580e3c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/romanyanke.9787671f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/romanyanke@2x.543a21b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/romanyanke@3x.91c3a321.jpg\";","export type IThemeSwitcherProps = IThemeSwitcherOwnProps\n\nexport enum Theme {\n  light,\n  dark,\n}\n\nexport interface IThemeSwitcherOwnProps {\n  theme: Theme\n  onChange(theme: Theme): void\n}\n","import React, { SFC } from 'react'\nimport { IDetailsProps } from './Details.interface'\n\nconst Details: SFC<IDetailsProps> = ({ label, value }) => {\n  return (\n    <>\n      <dt>{label}</dt>\n      <dd>{value}</dd>\n    </>\n  )\n}\n\nexport default Details\n","import { Theme } from './ThemeSwitcher.interface'\n\nexport enum ThemeIcon {\n  sunIcon = '☀️',\n  moonIcon = '🌛',\n}\n\nexport const swapTheme = (theme: Theme) => (theme === Theme.light ? Theme.dark : Theme.light)\n","import React from 'react'\n\nimport profilePicture from './assets/romanyanke.jpg'\nimport profilePicture2 from './assets/romanyanke@2x.jpg'\nimport profilePicture3 from './assets/romanyanke@3x.jpg'\n\nconst ProfileImage = () => {\n  return (\n    <div className=\"ProfileImage\">\n      <img\n        width=\"300\"\n        height=\"300\"\n        alt=\"Roman Yanke\"\n        src={profilePicture}\n        srcSet={`${profilePicture2} 2x, ${profilePicture3} 3x`}\n      />\n      <strong className=\"ProfileImage-caption\">Roman Yanke</strong>\n    </div>\n  )\n}\n\nexport default ProfileImage\n","import React from 'react'\nimport { IThemeSwitcherProps, Theme } from './ThemeSwitcher.interface'\nimport { swapTheme, ThemeIcon } from './ThemeSwitcher.utils'\n\nconst ThemeSwitcher = ({ theme, onChange }: IThemeSwitcherProps) => (\n  <button\n    key={theme}\n    onClick={() => onChange(swapTheme(theme))}\n    className={`ThemeSwitcher-button theme-${theme}`}\n  >\n    <span className=\"ThemeSwitcher-icon\">\n      {theme === Theme.dark ? ThemeIcon.sunIcon : ThemeIcon.moonIcon}\n    </span>\n  </button>\n)\n\nexport default ThemeSwitcher\n","import React, { useEffect, useState } from 'react'\nimport Details from '../Details'\nimport { Description } from './Pencils.interface'\n\nconst Pencils = () => {\n  const [info, setInfo] = useState<null | string>(null)\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('https://romanyanke.github.io/pencilbox-static/description/')\n      const info: Description = await response.json()\n      setInfo(info.description)\n    }\n    fetchData()\n  }, [])\n\n  return info ? (\n    <Details\n      label=\"Hobby\"\n      value={\n        <span>\n          I have <a href=\"http://pencil.yanke.ru/\">{info}</a>.\n        </span>\n      }\n    />\n  ) : null\n}\n\nexport default Pencils\n","import React, { useState, useEffect } from 'react'\n\nimport Details from '../Details'\nimport { Theme } from '../ThemeSwitcher/ThemeSwitcher.interface'\nimport ProfileImage from '../ProfileImage'\nimport ThemeSwitcher from '../ThemeSwitcher'\nimport daynight from 'daynight'\nimport Pencils from '../Pencils'\n\nconst App: React.SFC = () => {\n  const [theme, setTheme] = useState<Theme>(Theme.light)\n  const themed = Theme[theme]\n  useEffect(() => {\n    const day = daynight()\n    setTheme(!day.error && day.light ? Theme.light : Theme.dark)\n  }, [])\n\n  return (\n    <div className={`App ${themed}`}>\n      <main className=\"App-container\">\n        <section className=\"App-header\">\n          <div aria-hidden=\"true\" className=\"App-theme-switcher\">\n            <ThemeSwitcher theme={theme} onChange={setTheme} />\n          </div>\n          <ProfileImage />\n        </section>\n\n        <dl>\n          <Details label=\"Username\" value=\"romanyanke\" />\n          <Details\n            label=\"About\"\n            value={\n              <>\n                Building applications with TypeScript and React @\n                <a href=\"https://www.simplinic.de/\">simplinic</a>.\n              </>\n            }\n          />\n          <Details label=\"Email\" value={<a href=\"mailto:roman@yanke.ru\">roman@yanke.ru</a>} />\n          <Details label=\"Location\" value=\"Saint Petersburg, Russia\" />\n          <Pencils />\n        </dl>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\n\nconst rootElement = document.getElementById('root')\n\nif (rootElement) {\n  if (rootElement.hasChildNodes()) {\n    ReactDOM.hydrate(<App />, rootElement)\n  } else {\n    ReactDOM.render(<App />, rootElement)\n  }\n}\n"],"sourceRoot":""}