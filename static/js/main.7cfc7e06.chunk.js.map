{"version":3,"sources":["components/ProfileImage/assets/romanyanke.jpg","components/ProfileImage/assets/romanyanke@2x.jpg","components/ProfileImage/assets/romanyanke@3x.jpg","components/ThemeSwitcher/ThemeSwitcher.interface.ts","components/Details/Details.tsx","components/ThemeSwitcher/ThemeSwitcher.utils.ts","components/ProfileImage/ProfileImage.tsx","components/ThemeSwitcher/ThemeSwitcher.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Theme","Details","_ref","label","value","react_default","a","createElement","Fragment","className","ThemeIcon","ProfileImage","width","height","alt","src","profilePicture","srcSet","concat","profilePicture2","profilePicture3","ThemeSwitcher","props","theme","onChange","onClick","light","dark","swapTheme","sunIcon","moonIcon","App","_useState","useState","_useState2","Object","slicedToArray","setTheme","themed","useEffect","day","daynight","error","hidden","components_ThemeSwitcher_ThemeSwitcher","components_ProfileImage_ProfileImage","components_Details_Details","href","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","components_App_App","render"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qNCE5BC,uDCYGC,SAVqB,SAAAC,GAAsB,IAAnBC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,MAC5C,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBN,GAC/BC,EACDC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCDPRT,iEEAAU,kDCmBGC,EAfM,WACnB,OACEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OACEK,MAAM,MACNC,OAAO,MACPC,IAAI,cACJC,IAAKC,IACLC,OAAM,GAAAC,OAAKC,IAAL,SAAAD,OAA4BE,IAA5B,SAERf,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAlB,iCDdMC,kEAKL,IEOQW,EAVuC,SAAAC,GAAS,IACrDC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAEf,OACEnB,EAAAC,EAAAC,cAAA,UAAQkB,QAAS,kBAAMD,EFDF,SAACD,GAAD,OAA0BA,IAAUvB,EAAM0B,MAAQ1B,EAAM2B,KAAO3B,EAAM0B,MEC1DE,CAAUL,KAASd,UAAU,wBAC1Dc,IAAUvB,EAAM2B,KAAOjB,EAAUmB,QAAUnB,EAAUoB,kBCkC7CC,EAnCQ,WAAM,IAAAC,EACDC,mBAAgBjC,EAAM0B,OADrBQ,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBT,EADoBW,EAAA,GACbG,EADaH,EAAA,GAErBI,EAAStC,EAAMuB,GAMrB,OALAgB,oBAAU,WACR,IAAMC,EAAMC,cACZJ,GAAUG,EAAIE,OAASF,EAAId,MAAQ1B,EAAM0B,MAAQ1B,EAAM2B,OACtD,IAGDtB,EAAAC,EAAAC,cAAA,OAAKE,UAAS,OAAAS,OAASoB,IACrBjC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,OAAKoC,QAAM,EAAClC,UAAU,sBACpBJ,EAAAC,EAAAC,cAACqC,EAAD,CAAerB,MAAOA,EAAOC,SAAUa,KAEzChC,EAAAC,EAAAC,cAACsC,EAAD,OAGFxC,EAAAC,EAAAC,cAACuC,EAAD,CAAS3C,MAAM,WAAWC,MAAM,eAChCC,EAAAC,EAAAC,cAACuC,EAAD,CACE3C,MAAM,QACNC,MACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,yDAEEH,EAAAC,EAAAC,cAAA,KAAGwC,KAAK,6BAAR,aAFF,OAMJ1C,EAAAC,EAAAC,cAACuC,EAAD,CAAS3C,MAAM,QAAQC,MAAOC,EAAAC,EAAAC,cAAA,KAAGwC,KAAK,yBAAR,oBAC9B1C,EAAAC,EAAAC,cAACuC,EAAD,CAAS3C,MAAM,WAAWC,MAAM,gCChClC4C,EAAcC,SAASC,eAAe,QAExCF,IACEA,EAAYG,gBACdC,IAASC,QAAQhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASN,GAE1BI,IAASG,OAAOlD,EAAAC,EAAAC,cAAC+C,EAAD,MAASN","file":"static/js/main.7cfc7e06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/romanyanke.9787671f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/romanyanke@2x.543a21b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/romanyanke@3x.91c3a321.jpg\";","export type IThemeSwitcherProps = IThemeSwitcherOwnProps\n\nexport enum Theme {\n  light,\n  dark,\n}\n\nexport interface IThemeSwitcherOwnProps {\n  theme: Theme\n  onChange(theme: Theme): void\n}\n","import React, { SFC } from 'react'\n\nimport { IDetailsProps } from './Details.interface'\n\nconst Details: SFC<IDetailsProps> = ({ label, value }) => {\n  return (\n    <>\n      <div className=\"Details-label\">{label}</div>\n      {value}\n      <hr className=\"Details-delimeter\" />\n    </>\n  )\n}\n\nexport default Details\n","import { Theme } from './ThemeSwitcher.interface'\n\nexport enum ThemeIcon {\n  sunIcon = '☀️',\n  moonIcon = '🌛',\n}\n\nexport const swapTheme = (theme: Theme): Theme => (theme === Theme.light ? Theme.dark : Theme.light)\n","import React from 'react'\n\nimport profilePicture from './assets/romanyanke.jpg'\nimport profilePicture2 from './assets/romanyanke@2x.jpg'\nimport profilePicture3 from './assets/romanyanke@3x.jpg'\n\nconst ProfileImage = () => {\n  return (\n    <div className=\"ProfileImage\">\n      <img\n        width=\"300\"\n        height=\"300\"\n        alt=\"Roman Yanke\"\n        src={profilePicture}\n        srcSet={`${profilePicture2} 2x, ${profilePicture3} 3x`}\n      />\n      <strong className=\"ProfileImage-caption\">Roman Yanke</strong>\n    </div>\n  )\n}\n\nexport default ProfileImage\n","import React from 'react'\nimport { IThemeSwitcherProps, Theme } from './ThemeSwitcher.interface'\nimport { swapTheme, ThemeIcon } from './ThemeSwitcher.utils'\n\nconst ThemeSwitcher: React.SFC<IThemeSwitcherProps> = props => {\n  const { theme, onChange } = props\n\n  return (\n    <button onClick={() => onChange(swapTheme(theme))} className=\"ThemeSwitcher-button\">\n      {theme === Theme.dark ? ThemeIcon.sunIcon : ThemeIcon.moonIcon}\n    </button>\n  )\n}\n\nexport default ThemeSwitcher\n","import React, { useState, useEffect } from 'react'\n\nimport Details from '../Details'\nimport { Theme } from '../ThemeSwitcher/ThemeSwitcher.interface'\nimport ProfileImage from '../ProfileImage'\nimport ThemeSwitcher from '../ThemeSwitcher'\nimport daynight from 'daynight'\n\nconst App: React.SFC = () => {\n  const [theme, setTheme] = useState<Theme>(Theme.light)\n  const themed = Theme[theme]\n  useEffect(() => {\n    const day = daynight()\n    setTheme(!day.error && day.light ? Theme.light : Theme.dark)\n  }, [])\n\n  return (\n    <div className={`App ${themed}`}>\n      <div className=\"App-container\">\n        <header className=\"App-header\">\n          <div hidden className=\"App-theme-switcher\">\n            <ThemeSwitcher theme={theme} onChange={setTheme} />\n          </div>\n          <ProfileImage />\n        </header>\n\n        <Details label=\"Username\" value=\"romanyanke\" />\n        <Details\n          label=\"About\"\n          value={\n            <>\n              Building applications with TypeScript and React @\n              <a href=\"https://www.simplinic.de/\">simplinic</a>.\n            </>\n          }\n        />\n        <Details label=\"Email\" value={<a href=\"mailto:roman@yanke.ru\">roman@yanke.ru</a>} />\n        <Details label=\"Location\" value=\"Saint Petersburg, Russia\" />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\n\nconst rootElement = document.getElementById('root')\n\nif (rootElement) {\n  if (rootElement.hasChildNodes()) {\n    ReactDOM.hydrate(<App />, rootElement)\n  } else {\n    ReactDOM.render(<App />, rootElement)\n  }\n}\n"],"sourceRoot":""}